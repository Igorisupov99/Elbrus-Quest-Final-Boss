import { useEffect } from 'react';
import styles from './PhaseTransitionModal.module.css';

interface PhaseTransitionModalProps {
  isOpen: boolean;
  onClose: () => void;
  phaseNumber: number;
  rewardPoints: number;
  isGameComplete?: boolean;
}

export default function PhaseTransitionModal({
  isOpen,
  onClose,
  phaseNumber,
  rewardPoints,
  isGameComplete = false,
}: PhaseTransitionModalProps) {
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É —á–µ—Ä–µ–∑ 3 –∏–ª–∏ 7 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    if (isOpen) {
      const delay = isGameComplete ? 7000 : 3000;
      const timer = setTimeout(() => {
        onClose();
      }, delay);

      return () => clearTimeout(timer);
    }
  }, [isOpen, onClose, isGameComplete]);

  if (!isOpen) return null;

  return (
    <div className={styles.modalOverlay}>
      <div className={styles.modalContent}>
        <div className={styles.iconContainer}>
          <span className={styles.icon}>{isGameComplete ? 'üèÜ' : 'üéâ'}</span>
        </div>

        <h2 className={styles.title}>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
        
        <div className={styles.messageContainer}>
          <p className={styles.message}>
            {isGameComplete ? '–í—ã –ø—Ä–æ—à–ª–∏ –∏–≥—Ä—É!' : '–≠–∫–∑–∞–º–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–¥–∞–Ω!'}
          </p>
          {!isGameComplete && (
            <p className={styles.phaseMessage}>
              –í—ã –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Ñ–∞–∑—É
            </p>
          )}
          <p className={styles.rewardMessage}>
            –ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∏–ª <span className={styles.rewardPoints}>+{rewardPoints} –æ—á–∫–æ–≤</span>
          </p>
        </div>

        <div className={styles.countdown}>
          –ú–æ–¥–∞–ª–∫–∞ –∑–∞–∫—Ä–æ–µ—Ç—Å—è —á–µ—Ä–µ–∑ <span className={styles.timer}>{isGameComplete ? '7' : '3'}</span> —Å–µ–∫—É–Ω–¥—ã
        </div>
      </div>
    </div>
  );
}
